# frozen_string_literal: true

describe Hexdump do
  subject(:hexdump) { described_class.new(stream) }
  let(:stream) do
    %w[
      b40eb04820510b06520510b06c20510b06c20510b06f20510e9fdff000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000000000000000000000000000000
      aa55
    ].join # broken into lines for readability
  end
  describe '#to_s' do
    context 'when converted to string' do
      it 'hides lines of 0s with a single *' do
        expect(hexdump.to_s).to eql <<~HEX.chomp
          b40e b048 2051 0b06 5205 10b0 6c20 510b
          06c2 0510 b06f 2051 0e9f dff0 0000 0000
          0000 0000 0000 0000 0000 0000 0000 0000
          *
          0000 0000 0000 0000 0000 0000 0000 aa55
        HEX
      end
    end
  end

  describe '.group_by' do
    let(:stream) { 'b40eb04820510b06520510b06c20510b06c20510b06f20510' }
    it 'groups by 4' do
      expect(
        described_class.group_by(stream)
      ).to eql 'b40e b048 2051 0b06 5205 10b0 6c20 510b 06c2 0510 b06f 2051 0'
    end

    it 'groups by 32' do
      expect(
        described_class.group_by(stream, by: 32)
      ).to eql 'b40eb04820510b06520510b06c20510b 06c20510b06f20510'
    end

    context 'never ends with whitespace' do
      let(:stream) { 'b40eb048' }
      it 'works' do
        expect(
          described_class.group_by(stream)
        ).to eql 'b40e b048'
      end
    end
  end

  describe '.group_by_line_and_word' do
    let(:stream) { 'b40eb04820510b06520510b06c20510b06c20510b06f20510' }
    context 'when broken by lines and words' do
      it 'it breaks without trailing whitespace' do
        expect(
          described_class.group_by_line_and_word(stream)
        ).to eql <<~HEX.chomp
          b40e b048 2051 0b06 5205 10b0 6c20 510b
          06c2 0510 b06f 2051 0
        HEX
      end
    end
  end
end
